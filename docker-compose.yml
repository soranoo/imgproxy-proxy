version: "3.8"

services:
  proxy:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - IMGPROXY_KEY=${IMGPROXY_KEY}
      - IMGPROXY_SALT=${IMGPROXY_SALT}
      - IMGPROXY_SECRET=${IMGPROXY_SECRET}
      - IMGPROXY_BASE_URL=http://imgproxy:8080
      - IMGPROXY_ENCODE=true
      - METRICS_ENABLED=true
      - METRICS_ENDPOINT=/metrics
      - METRICS_NAMESPACE=imgproxy_proxy
      - LOG_LEVEL=1
    depends_on:
      - imgproxy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    # Add labels for Prometheus service discovery
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=8080"
      - "prometheus.io/path=/metrics"

  imgproxy:
    image: darthsim/imgproxy:latest
    environment:
      - IMGPROXY_KEY=${IMGPROXY_KEY}
      - IMGPROXY_SALT=${IMGPROXY_SALT}
      - IMGPROXY_SECRET=${IMGPROXY_SECRET}
      - IMGPROXY_LOCAL_FILESYSTEM_ROOT=/images

      - IMGPROXY_PROMETHEUS_BIND=0.0.0.0:9100
      - IMGPROXY_PROMETHEUS_NAMESPACE=imgproxy
    volumes:
      - ./images:/images
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  # Optional Prometheus service for metrics collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - proxy
    restart: unless-stopped
    
  # Optional Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  grafana-storage:
